package reservationV1;

public class ShowMenu {
	Login lg = new Login();
	MemberManager mbmg = new MemberManager();
	RoomList rl = new RoomList();
	Area ar = new Area();
	Room r = new Room();

	int input = 0; // 입력값

	// 로그인 메뉴
	void LoginMenu() {
		if (mbmg.session == null || mbmg.ownerSession == null) {
			do {
				System.out.print("0. 프로그램종료 1. 로그인 2. 회원가입  3. 메인화면");
				input = e_oop.ScanUtil.nextInt();

				switch (input) {
				case 0:
					System.out.println("프로그램을 종료합니다.");
					System.exit(0);
					break;
				case 1:
					input = 0;
					System.out.print("개인 / 사업자");
					String type = e_oop.ScanUtil.nextLine();
					if (type.equals("개인")) {
						lg.memberLogin();
					} else if(type.equals("사업자")) {
						lg.ownerLogin();
					} else {
						System.out.print("잘못입력하셨습니다.");
					}
					break;
				case 2:
					input = 0;
					mbmg.MemberJoin(); // 회원가입화면 호출
					break;
				case 3:
					input = 0;
					MainMenu(); // 메인화면 호출
					break;
				}
			} while (input != 0);
		} else { // 로그인이 되어있을시
			do {
				System.out.print("0. 프로그램종료 1. 회원가입 2. 로그아웃 3. 메인화면 ");
				input = e_oop.ScanUtil.nextInt();

				switch (input) {
				case 0:
					System.out.println("프로그램을 종료합니다.");
					System.exit(0);
					break;
				case 1:
					input = 0;
					mbmg.MemberJoin(); // 회원가입화면 호출
					break;

				case 2:
					input = 0;
					mbmg.logoutSession(); // 로그인세션을 비어준다
					LoginMenu(); // 로그인메뉴화면 호출
					break;
				}
			} while (input != 0);
		}
	}

	void MainMenu() { // 메인화면
		if (mbmg.session != null && mbmg.ownerSession == null) {
			MemberMainMenu();
		} else if (mbmg.ownerSession != null && mbmg.session == null) {
			ownerMainMenu();
		} else {
			nonMemberMainMenu();
		}

	}
	
	void nonMemberMainMenu() {
		do {
			System.out.print("0. 프로그램 종료 1. 예약하기 2. 로그인 3. 회원가입");
			input = e_oop.ScanUtil.nextInt();

			switch (input) {
			case 0:
				System.out.print("프로그램을 종료합니다.");
				System.exit(0);
				break;
			case 1:
				input = 0;
				subMenu(); // 예약화면 호출
				break;
			case 2:
				input = 0;
				mbmg.logoutSession();
				LoginMenu(); // 로그아웃
				break;
			case 3:
				input = 0;
				mbmg.MemberJoin();
				break;
			}
		} while (input != 0);
	}

	// 회원 메인화면
	void MemberMainMenu() {
		do {
			System.out.print("0. 프로그램 종료 1. 예약하기 2. 로그아웃 3. 회원가입");
			input = e_oop.ScanUtil.nextInt();

			switch (input) {
			case 0:
				System.out.print("프로그램을 종료합니다.");
				System.exit(0);
				break;
			case 1:
				input = 0;
				subMenu(); // 예약화면 호출
				break;
			case 2:
				input = 0;
				mbmg.logoutSession();
				LoginMenu(); // 로그아웃
				break;
			case 3:
				input = 0;
				mbmg.MemberJoin();
				break;
			}
		} while (input != 0);		
	}

	void subMenu() { // 예약하기 선택했을 때
		
		if(mbmg.session != null) {
			do {
				System.out.print("0. 프로그램 종료 1. 메인화면 2.로그아웃 3.회원가입 "
						+ "5.펜션 6. 호텔 7. 모텔 8. 게스트하우스 9. 검색 ");
				input = e_oop.ScanUtil.nextInt();

				switch (input) {
				case 0:
					System.out.print("프로그램을 종료합니다.");
					System.exit(0);
					break;
				case 1:
					input = 0;
					MainMenu(); // 메인화면 호출
					break;
				case 2:
					input = 0;
					mbmg.logoutSession();
					LoginMenu();
					break;
				case 3:
					input = 0;
					 
					break;
				case 4:
					input = 0;
					 
					break;
				case 5: // 펜션리스트를 불러온다
					input = 0;
					 
					break;
				case 6: // 호텔리스트를 불러온다
					input = 0;
					searchMenu();
					break;
				case 7: // 모텔리스트를 불러온다
					input = 0;
					searchMenu();
					break;
				case 8: // 게스트하우스리스트를 불러온다
					input = 0;
					break;
				case 9:
					input = 0;
					searchMenu();
					break;

				}
			} while (input != 0);
		} else {
			do {
				System.out.print("0. 프로그램 종료 1. 메인화면 2.로그인 3.회원가입 "
						+ "5.펜션 6. 호텔 7. 모텔 8. 게스트하우스 9. 검색 ");
				input = e_oop.ScanUtil.nextInt();

				switch (input) {
				case 0:
					System.out.print("프로그램을 종료합니다.");
					System.exit(0);
					break;
				case 1:
					input = 0;
					MainMenu(); // 메인화면 호출
					break;
				case 2:
					input = 0;
					 // 펜션리스트를 불러온다
					break;
				case 3:
					input = 0;
					 // 호텔리스트를 불러온다
					break;
				case 4:
					input = 0;
					 // 모텔리스트를 불러온다
					break;
				case 5:
					input = 0;
					 // 게스트하우스리스트를 불러온다
					break;

				case 6:
					input = 0;
					searchMenu();
					break;

				}
			} while (input != 0);
		}
		
	}
	
	// 사장님 메인화면
	void ownerMainMenu() {
		do {
			System.out.print("0. 프로그램 종료 1. 방 등록하기 2. 계좌 등록하기 3. 로그아웃 4. 회원가입");
			input = e_oop.ScanUtil.nextInt();

			switch (input) {
			case 0:
				System.out.print("프로그램을 종료합니다.");
				System.exit(0);
				break;
			case 1:
				input = 0;
				roomRegisterMenu(); // 방등록 메뉴 호출
				break;
			case 2:
				input = 0;
				accountRegisterMenu(); // 계좌등록 메뉴 호출
				break;
			case 3:
				input = 0;
				mbmg.ownerSession = null;
				LoginMenu(); // 로그인메뉴 호출
			case 4:
				input = 0;
				mbmg.MemberJoin(); // 회원가입
				break;
			}
		} while (input != 0);
		
	}
	
	
	// 방등록 메뉴 호출
	void roomRegisterMenu() {
		do {
			System.out.print("0. 프로그램 종료 1. 등록 2.취소 3. 메인화면 4. 로그아웃 5. 회원가입 ");
			input = e_oop.ScanUtil.nextInt();

			switch (input) {
			case 0:
				System.out.print("프로그램을 종료합니다.");
				System.exit(0);
				break;
			case 1:
				input = 0;
				roomRegister();
				break;
			case 2:
				input = 0;
				roomRegisterCancel();
				break;
			case 3:
				input = 0;
				MainMenu();
				break;
			case 4:
				input = 0;
				mbmg.ownerSession = null;
				LoginMenu();
			case 5:
				input = 0;
				mbmg.MemberJoin();
				break;
			}
			
		} while (input != 0);
	}
	
	// 방등록
	void Register() {
		System.out.println("방의 정보를 입력하세요 > ");
		System.out.print("방이름 :");
		String roomName = e_oop.ScanUtil.nextLine();
		System.out.print("방지역 :");
		String roomArea = e_oop.ScanUtil.nextLine();
		System.out.print("방종류 :");
		String roomType = e_oop.ScanUtil.nextLine();
		System.out.print("인원 :");
		String roomPeopleNumber = e_oop.ScanUtil.nextLine();
		System.out.print("방번호 : (0~9)");
		String roomNumber = e_oop.ScanUtil.nextLine();
		System.out.print("방가격 :");
		String roomPrice = e_oop.ScanUtil.nextLine();
	}

	// 방등록취소
	void roomRegisterCancel() {		
		System.out.println("등록취소할 방의 이름을 입력하세요 > ");
		String roomName = e_oop.ScanUtil.nextLine();
		
		for(int i = 0; i < rl.rList.length; i ++) {
			if(rl.rList[i].getRoomName().equals(roomName)) {
				rl.rList[i] = null;
			}
		}
		ownerMainMenu();
	}
	
	void accountRegisterMenu() {
		
	}
	
	void searchMenu() {

	}
}
